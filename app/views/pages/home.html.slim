header.site-title
  h1 Jetpack
  h2 A minimal, modern, modular UI framework that helps without hurting.

h2 Why?
p In a world with so many existing UI frameworks, why did I bother
  creating this one?

ol
  li Jetpack is optimized for Rails apps, which is helpful for many.
  li Jetpack doesn't pollute your css like many other frameworks do,
     instead it just provides mixins which make it easy for you to
     create a unique looking application quickly.
  li Jetpack is totally modular, so it's really easy to pick and choose
     the bits that you like, whilst ignoring or replacing anything you don't.

p If those sound like nice things for you, then you should give Jetpack
  a try. If not, well, there are like a million more of these UI frameworks out there,
  and I bet one of them will suit you nicely.


h2 Quick Start

h3 Install
p
  | Add detailed installation instructions here.



h3 Modules
p
  | Jetpack is intended to be modular. All dependencies are included in the core
    module, everything else is totally independent and can be added or removed
    at any time.

h4 Presets <small>required*</small>
code @import 'jetpack/presets';
p Jetpack presets are required, BUT, the recommended approach is to copy
  and paste the presets file that ships with Jetpack into the top of your
  application manifest file and then tweak it as much as you like. As long
  as you've defined the variables that are set in <code>jetpack/presets</code>
  before you include the rest of jetpack, you're golden.


h4 Core <small>required</small>
code @import 'jetpack/core';
p Jetpack Core is the only required module. It includes basic utility
  mixins that the other modules rely on.

h4 Resetize <small>optional</small>
code @import 'jetpack/resetize';
p Jetpack Resetize is a mashup of Normalize and Formalize, with a
  few little tweaks thrown in for good measure. To my knowledge, these
  are the best reset libraries out there. The code is long, but thoroughly
  commented, so check that out if you want to see exactly what's set.

p <em>Note: this is one of only two files that include selectors
  (the other being jetpack/defaults). If you don't want any selectors
  added to your CSS for you, leave this out and include your own reset file
  or just don't bother with CSS reset. It's up to you.</em>

h4 Typography <small>optional</small>
code @import 'jetpack/typography';
p Jetpack Typography is a remix of the Typographic styles from Twitter
  Bootstrap. Among other things, I've toned down the size of the headings
  (geez!) and increased the color contrast.

h4 Fractionalize <small>optional</small>
code @import 'jetpack/fractionalize';
p Fractionalize is Jetpack's uber-badass grid system. It's not the typical
  span-something grid you're used to - instead, it's a method for dividing
  the page into fractional columns that reliably flow without any special
  markup or other shenanigans.

h4 Forms <small>optional</small>
code @import 'jetpack/forms';
p Jetpack includes a collection of different form layout mixins. The
  base styles for form elements are mostly set in the Resetize library,
  so if you're not using that the individual form elements will retain
  their default OS / Browser appearance. Element-level styles used in
  the Jetpack Forms mixins do not strictly depend on the Resetize library,
  but they probably will look better if you're using that (or something
  else that standardizes form element styles across browsers).

h4 Tables <small>optional</small>
code @import 'jetpack/tables';
p Jetpack Tables are a based on a remix of the table styles in
  Twitter Bootstrap. Simple, straightforward. Use 'em if you like.

h4 Interface <small>optional</small>
code @import 'jetpack/interface';
p Jetpack Interface is a set of helpers for common interface elements,
  like labels and buttons.

h4 Navigation <small>optional</small>
code @import 'jetpack/navigation';
p Jetpack Navigation is a set of helper styles for common nav UI
  elements.

h4 Defaults <small>optional</small>
code @import 'jetpack/defaults';
p Jetpack Defaults is the second file that includes selectors (the other being jetpack/resetize).
  If you'd like to have some simple stuff pre-defined for you, like <code>a.button</code>
  automatically including the default button style, then include this file.
  If you want to have total control over what gets included in your CSS stack, then just
  leave this out and only include the bits of Jetpack you want.

h4 Javascript <small>optional</small>
code
  | //= require jetpack
p You can add Jetpack JS to your application by requiring it in your JS manifest file.
  You'll get a few handy helpers here, including alert messages, tool tips, and modals.
  See the source for details.

h4 Helpers <small>included</small>
code included by default
p Jetpack Helpers is a set of Rails helpers that make it just a tad faster to put an app
  together. The <code>view_name</code> helper is really useful for CSS namespacing, and
  the <code>title</code> and <code>flash_messages</code> helpers are just quick timesavers
  that are used in nearly every app.


h2
  | Epilogue
  small A more in-depth discussion about how Jetpack came to be:

p When I first sat down and started working on Jetpack, here is what
  I was thinking:

ol
  li Twitter Bootstrap is really neat, but it has become so ubiquitous that
     using it "out of the box" is kind of like waving a flag that says "I don't
     have the skill to design my own decent-looking app!"
  li When you try to heavily customize Twitter Bootstrap so you don't look like
     a noob, you'll quickly discover it has polluted your entire CSS namespace and
     it can be a lot of work to override. So much work, in fact, that if you really
     want your site to look different you're basically going to be recreating most of
     the bootstrap from scratch anyway. In that case, why not just copy/paste the bits
     you want to use instead of importing the whole thing and overriding it all?
  li While none of the other UI frameworks out there are so popular as to have become
     cliche, most of them still work by defining lots of styles for you, which you then
     need to override if you want too adjust them. Again, why not just copy/paste the bits
     you like?
